Summary This audio transcript analyzes the resume of David Watson, highlighting
his unconventional career path characterized by a diverse skillset spanning
computer science, music education, and technical writing. The speakers discuss
how his seemingly disparate interests fuel each other, leading to innovative
problem-solving and adaptability. Key examples showcase his expertise in diverse
areas like FPGA optimization, cloud-native development, and leadership roles,
emphasizing his ability to blend technical proficiency with strategic thinking
and collaboration. The discussion concludes by emphasizing the importance of
continuous learning, embracing ambiguity, and exploring "liminal edges" in one's
careerâ€”areas where innovation and growth are possible. The overall purpose is to
illustrate a successful career model built on adaptability and the synergistic
combination of diverse skills.

Key Topics










All right, let's dive in today and take a look at the career of David Watson.
We've got his resume in front of us, kind of like a career highlight reel,

and it's really fascinating, let me tell you. One of the first things that
jumped out at me was this unusual mix of computer science, music education, and
even technical writing. It's not your typical uh tech career path, is it?

Not at all. No, it's a it's not very often that you see that kind of range
really all in one resume. But it does kind of suggest that uh while someone who
thrives on exploring a lot of different fields and they're finding creative ways
to connect them.

Yeah, I think you're right. It makes you wonder if if those interests, which
seem kind of separate, if they actually fuel each other in a way, you know, like
maybe the creativity from music education informs his approach to problem
solving in tech.

That's a really interesting thought. It really does make you wonder if if that
ability to blend disciplines like that is what leads to that innovative
thinking,

right? And we can actually see these clues to this multifaceted approach. right
from the start. You know, he won a computer science award even before going to
music school and and then on top of that he did a programming internship.

Really? That's fascinating. That suggests like a real commitment to both the
technical side and the artistic side even before you know specializing in one
path or the other. It makes you think about, you know, those early passions you
might have had and how those have maybe influenced your own career journey.

Totally. Yeah.

Sometimes I wish I'd explored some of my early interests a little bit more. But
let's get back to David's resume. I got to ask you about this title software's
liinal edges. That's pretty uh thoughtprovoking, don't we think?

Yeah, it is. It is. Liinal typically refers to like a transitional space, like a
threshold between one state and another. So, I wonder if applying that to
software, I wonder if it reflects um his work sort of pushing the boundaries of
what's possible in tech.

Yeah. Yeah. Like exploring the areas where technology is still evolving

and maybe where the rules haven't really been written yet.

What do you think it means for someone to work at those liinal edges? I think it
requires a certain mindset. You got to be comfortable with ambiguity, willing to
experiment, and maybe even embrace a bit of chaos. You know,

it's almost like being a pioneer, you know,

venturing into uncharted territory in the tech world. And speaking of venturing,
let's take a look at his 20-year journey through data products, software
services, tools. He even mentions going from dialogue box to documentation.

That's a very interesting way to put it. Suggests an understanding of the entire
software development life cycle, not just, you know, focusing on one specific
aspect.

Right. Right. It's not just about, you know, writing code. It's about how that
code interacts with users, how it's documented.

Yeah.

How it fits into, you know, the larger ecosystem.

Yeah. That kind of broad perspective is so valuable, especially in today's, you
know, rapidly evolving tech landscape where adaptability is key.

And speaking of adaptability, let's jump to his most recent role at Wyvern as a
technologist. He's working with Typescript, Docker, and Kubernetes, which are
really, you know, shaping the future of software development. That's some
serious firepower.

It is. And it's not even just his full-time role. He's also doing some
freelancing, prototyping, personal knowledge management with GPT and then also
experimenting with data in Rust Polers. That shows real commitment to staying,
you know, ahead of the curve and exploring the cutting edge technologies.

Yeah, it's like he's constantly pushing himself to learn and grow. Now, let's
let's dive into a specific example of his problem solving skills. His work at
Caterpillar on the ZCU 104 P1. INQ project really stood out to me.

Ah, yes, the FPGA project. Field programmable gate arrays. Really fascinating
piece of technology. Essentially, they're reconfigurable chips that can be
programmed to perform specific tasks.

So, instead of being hardwired for one function, they can be adapted kind of on
the fly.

Exactly. And in this case, David was tasked with optimizing the performance of
some Intel code that had been ported to this FPGA platform. And he managed to
achieve a significant speed boost. You know, between 20% % and 50% just by
manipulating FPGA feature flags within the GCC compiler.

Okay, now you're going to have to break that down for me a little bit. What
exactly are feature flags in this context? And how did tweaking them lead to
such a performance improvement?

Well, feature flags are basically settings that control certain functionalities
within the FPZA. And by carefully adjusting these flags, David was able to, you
know, fine-tune the code's execution on the hardware, resulting in, you know,
those significant speed gains.

So, it's not about rewriting the code. itself. It's more about optimizing how it
interacts with the FPGA's capabilities.

Precisely. And what's really interesting is that this approach bypassed the need
for complex computational analysis or traditional code optimization techniques.

So, it's like he found this clever workaround, a shortcut that actually worked
and and led to a more efficient solution.

Yes. And it really highlights his deep understanding of both the software and
the underlying hardware. It's not just about knowing how to code. It's about
understanding how that code interacts. with the hardware to achieve, you know,
optimal performance.

It's a great example of how thinking outside the box can lead to those
unexpected breakthroughs.

And his contributions at Caterpillar didn't stop there. He also tackled the
challenge of building sensor storage for an edge network on Kubernetes

using S3 not as a product, but as a protocol. Now, for someone like me who's
not, you know, a cloud expert, what's what's the difference there?

Think of it this way. When you use S3 as a product, you're relying on a specific
service provided by Amazon. Right? But when you use it as a protocol, you're
leveraging the underlying standards and principles of S3 to create your own
storage solution.

So it's like speaking the language of S3 rather than relying on a translator.

Exactly. And in the context of, you know, building sensor storage for an edge
network, that flexibility is crucial. It allows you to tailor the storage
solution to the specific needs of the network rather than being, you know,
constrained by the limitations of a pre-built product.

It's a great example of how, you know, a deep understanding of technology can
lead to innovative solutions.

And while he was at it, he also collaborated with a dozen IT executives to plan
for the implications of hyperconverged infrastructure on cloudnative storage.

Oh wow, that's a mouthful, isn't it? Essentially, it means he was involved in
strategic discussions about how to integrate different IT systems to create a
more efficient and scalable infrastructure.

So not just a tech wiz, but also someone who can communicate these complex ideas
to highle executives.

M can contribute to strategic decision-m pretty impressive.

It really highlights his ability to work across different levels of an
organization and contribute to both the technical and the strategic aspects of a
project.

And let's not forget his work on web service prototypes related to Git for data
storage using Golang. Another example of you know staying ahead of the curve and
exploring new frontiers in software development.

Absolutely. It seems like he's always seeking out new challenges and pushing
those boundaries of what's possible with technology and and this is where we
start to see his leadership skills emerge as well. At Rent Jungle, Wellbridge
Health, and Hire an Esquire, he took on roles that went beyond just coding,
demonstrating his ability to to lead teams, improve processes, and solve complex
problems.

Well, let's dig into those leadership highlights a little bit more in part two
of our deep dive because it looks like there's a lot more to uncover in the
career journey of David Watson. Welcome back to our deep dive into the career of
David Watson. Last time we were exploring his impressive technical skills and
and his ability to really find those creative solutions to complex problems. But
as his resume shows, he's not just a coder. He's also taken on a lot of
leadership roles driving process improvements and and even shaping team
dynamics.

Yeah, absolutely. It's really fascinating to see how his career path has has
evolved from like a purely technical focus to one that really embraces
leadership and collaboration. It speaks volumes about his ability to to adapt
and grow in all these different environments.

For sure. Let's start. with uh his time at Rent Jungle, he mentions leading
these weekly retrospectives that actually improved team communication and
velocity

which is something that a lot of teams struggle with.

What's the key to making those retros effective?

Well, I think it's about fostering a culture of, you know, really open
communication and and constructive feedback. It sounds like David was able to
create like a safe space for for team members to to share their perspectives,
but also to identify areas where where they could improve, and that ultimately
led to, you know, greater efficiency and productivity.

Right. Right. Because it's not just about identifying the problems. It's about
finding the solutions together. And then there's the story of that scrapey
crawler that he built over tour for gathering real estate data.

Yes. The stealthy web crawler. Quite a project. Highlights his resourcefulness
for sure. And and also his ability to to use technology in creative ways to to
overcome challenges.

And for those of us who aren't as familiar with with web crawling or even or
even tour, can you explain explain what was so innovative about this approach?
Sure, web crawling is essentially it's the process of automatically browsing the
web and extracting data. However, a lot of websites have these measures in place
to prevent this kind of, you know, automated scraping. So, by routing his
crawler through the tour network, which is known for its anonymity, but also its
ability to kind of bypass those restrictions, David was able to gather, you
know, all this data without triggering any alarms.

So, it's like he created this this digital disguise for his crawler, allowing it
to to blend in and and access information without without being detected.

Exactly. It's a very clever technique and it shows that he can, you know, think
outside the box and find those solutions that that others might miss.

Absolutely. Yeah. And his his problem solving skills, his leadership skills,
they continue to shine at Wellbridge Health and hire an Esquire where he
spearheaded uh these efforts to deprecate legacy dependencies but then also
build API backends and lead this lean Python 3 redesign. It sounds like like a a
lot of heavy lifting.

It was it was these are all very crucial tasks in in modern software
development, especially as as companies are trying to modernize their systems
and and improve efficiency. What's really striking is that these roles, they
weren't just about coding. It was about taking ownership and really driving, you
know, significant improvements across across that whole development process,

right? It's about seeing the the bigger picture and understanding how all those
different parts of the system fit together. Now, let's rewind a little bit and
talk about his time at Forever in 2013 where he pro top a full stack cloud idea
using Python 3 before porting it to Ruby on Rails. This was before the cloud was
as ubiquitous as it is today.

That's a great point. It shows that he was, you know, ahead of the curve. He
recognized the potential of cloud computing early on and that willingness to to
embrace these emerging technologies. It's a it's a recurring theme in his
career.

It makes you wonder if if those early experiences with the cloud, if those kind
of shaped his later work and and his interest in in technologies like do and
Kubernetes.

Mhm.

Which are all about, you know, cloudnative development these days.

Yeah, I think so. You know, those early early forays into the cloud probably
gave him a a very valuable perspective on the challenges and opportunities that
come with building and deploying software in that environment and and then his
his fluency in multiple programming languages as as we see by you know his
switch from Python to Ruby on Rails that that only adds to his versatility as a
developer.

Speaking of versatility, his time at Smash Brainstorm SMS techn technologies.
Yeah,

this adds another dimension to to his skill set. He was writing conversational
text systems

which are kind of, you know, precursors to today's chat bots and AI assistants.

Absolutely. And it's interesting to see how he how he applied those skills to
support these these large SMS campaigns, including ones for the Pittsburgh
Steelers and Miller Corors. It shows how how wide the range of applications is
for this kind of technology.

Yeah. So from from cloud prototypes to textbased campaigns for for major brands.
His career path path is is anything but predictable. And then there's there's
his experience in the in the medical field at Wellbridge where he worked on FDA
regulated software. That's that's a whole other ball game.

It is. It is. The medical field presents these very unique challenges,
especially when it comes to, you know, software development. The stakes are high
and there's a much greater emphasis on precision, but also reliability and
compliance with with all those regulations.

So, it's not just about, you know, building cool features. It's about ensuring
that the software is is safe, it's effective, and and meets all of those those
necessary regulatory requirements that that really adds a whole new layer of
complexity.

Exactly. And it speaks to David's ability to adapt to these different
environments and and work within within these these strict guidelines, his work
on, you know, this C++ QA tests, maintaining the Pearl code review system and
contributing to the cure of a US product. All of those really highlight his
understanding of the specific demands that that come with medical software
development.

Right. Right. And it's not just about the the the technical aspects. He also
prototyped wireframes and storyboards for for adaptive 4D treatment planning,

which suggests a much broader understanding of the user experience and the the
clinical workflow.

Yeah, it's fascinating to see how he was able to, you know, bridge the gap
between the technical side and the clinical side. He wasn't just, you know,
developing the software itself, but also contributing to how it would actually
be used in in a real world clinical setting.

It's it's a reminder that software development at its best is about solving
those real problems and and improving people's lives. So let's let's move on to
applied perception where he he tackled the challenge of visualizing XML sonar
data using Python and Microsoft visual C++

and this is where where his ability to you know make sense of all this complex
data and present it in in a meaningful way really shines. Visualizing sonar data
is no easy feat. It it requires that deep understanding of both the data itself
and then also the the tools that are used to represent it you know visually.

Yeah. It's like it's like translating a foreign language almost, you know,
taking this raw data and transforming it to something that humans can understand
and interpret.

And on top of that, he also ported a a Windows GUI application to Ubuntu Linux,

showing, you know, his comfort working across different operating systems.

Exactly. Exactly. And his experience at Nomos and Maya design further reinforce
this versatility. He consistently demonstrates his ability to tackle C++
development, GUI design, and prototyping across all these diverse projects and
platforms. And at at May design, he even deployed Python web services and then
demoed this this IoT lighting proof of concept which shows he's able to you know
stay ahead of the curve and embrace those new technologies.

It's like he's a technological chameleon you know able to to blend in and thrive
in any environment and his his team at Maya Design even won an award for their
efforts which speaks to his his collaborative spirit but also his ability to to
inspire others. Now let's let's talk about a really intriguing part of of his
journey his co-founding of Cobb. Ah, Cobbind. This is where we see, you know,
his entrepreneurial spirit and his willingness to kind of challenge that
conventional thinking. The the idea behind Cobbind was was really quite
innovative for its time, tightly binding applications and the operating system
at at build time.

It was a very different approach to how how software was typically packaged and
and distributed. And while the idea wasn't immediately embraced, you know,

it it later became more common in Linux distributions.

That's right. It's a it's a reminder that sometimes, you know, the most ground
breaking ideas, they take time to gain traction and to be fully appreciated.
It's also a testament to David's vision and his his belief in his own ideas even
when when they kind of went against the the mainstream.

So, we've seen him excel as as a developer, as a leader, and and as an
entrepreneur. But there's one more aspect of of his career that I that I find
really fascinating. It's it's his dedication to continue learning. He even has a
section on his resume specifically for continued education.

I love that. Yeah. It highlights his commitment to you know, lifelong learning
and and his understanding that that staying relevant in in tech requires
constant growth and and adaptation.

He mentions books like Crystal Clear and Flow

which focus on, you know, clarity, productivity, and and and that optimal
experience.

It makes you wonder how how those concepts have maybe influenced his work and
and his approach to to problem solving.

I think maybe it's about finding that that state of flow, you know, where you're
completely immersed in in a task

and you're able to, you know, achieve peak performance. That's a that's a
valuable skill in any field really, especially in one is demanding a software
development and and the fact that it's constantly evolving.

Yeah, I think you're right. And and his participation in in Git Foundations,
PYON, and RDBMS at MIT, all of those show his commitment to to expanding his
knowledge, but also staying staying up to date on the latest trends and
technologies. It's it's really inspiring to to see that level of of dedication
to to personal and professional growth.

Yeah, it's a powerful reminder that learning should never stop really. No matter
no matter how much experience you have, there's there's always something new to
discover. And that that process of continuous learning, it keeps us engaged. It
keeps us adaptable and it keeps us ready to face whatever challenges might come
our way.

So, as we as we wrap up part two of our deep dive, I'm I'm struck by the sheer
breadth and depth of David's career journey from early programming to leadership
roles, entrepreneurial ventures, and and a passion for lifelong learning. He's
he's really embodied this idea of a multifaceted career path.

Absolutely. In part three, we'll delve into the the key takeaways from his
remarkable journey and and we'll explore what what we can all learn from his
example. We'll also tackle that intriguing title, software's liinal edges, and
and what it might mean for both David and the future of technology.

Stay tuned for the final insights. Welcome back to the final part of our deep
dive into David Watson's career. We've we've covered so much from his technical
achievements and his leadership roles to his entrepreneurial spirit. Yeah. And
you know what's what's interesting to me is that it's it's not just a list of
accomplishments. There's there's a real thread of adaptability that runs through
his his whole career. He's he's constantly learning, evolving, and and finding
those ways to apply his his skills in in these new and interesting contexts.

And that's what that's what makes his story so compelling, isn't it? He's not
afraid to step outside of his comfort zone and really explore that uncharted
territory. And and that brings us back to that that really intriguing title that
he chose for his resume. Software is al edges. We talked about it a bit earlier,
but I'd love to hear your final thoughts on on what that phrase really means.

It's it's a powerful image for sure. This idea of of working at the edges where
where things are still, you know, undefined and influx, I think it speaks to a
certain mindset, uh, a willingness to to embrace ambiguity, but also to push
those boundaries of of what's what's possible with technology.

And and maybe it's not just about the the technology itself. Maybe it's maybe
it's about finding those those liinal spaces in our own careers, those areas
where we can we can experiment, learn, and grow.

Exactly. It's about recognizing that the lines between these disciplines are
becoming more and more blurred, you know, and that ability to to blend skills
and and knowledge from from different fields, that's becoming more and more
valuable

like like David's blend of computer science, music education, and technical
writing. You know, those seemingly unrelated fields have have clearly informed
his his approach to problem solving and and Absolutely. And it's a reminder that
our interests and passions, even those that seem unrelated to our work, those
can actually be be valuable assets, they can bring a unique perspective and and
really spark those creative solutions.

So, as we wrap up this deep dive, what are what are some of those key takeaways
that that our listeners can maybe apply to their own careers, their own lives?

I think the biggest one is is the importance of of continuous learning. David's
story is really a testament to to the fact that education doesn't end with a
degree. It's It's an ongoing process and the more we learn, the more adaptable
and resilient we become.

You're absolutely right and it's not just about that formal education. It's
about, you know, seeking out new experiences, experimenting with with different
approaches and constantly pushing ourselves to grow.

I think another another important takeaway is is the power of connecting those
seemingly disperate fields. You know, we often think of of our careers in these
these linear terms, but but David's story shows us that that the most
interesting paths are often the ones that that Zig and exploring exploring
different domains and and finding those unexpected connections.

Yeah, it's about embracing that that multifaceted approach and and recognizing
that our our diverse interests can be our greatest strength.

Absolutely. And as as technology keeps evolving at this this really
unprecedented pace, this this ability to adapt, to learn, and to connect the
dots, that's going to be more crucial than ever before.

So, we we leave our listeners with this final thought. H how can you embrace
those liinal edges? in your own field or or your own interest. What are those
areas where you can you can experiment, maybe challenge some assumptions, but
also push the push the boundaries of what's possible?

Remember, you know, the most rewarding journeys are often the ones that that
take us off that that beaten path. David Watson's career is is really a
testament to that and and it's it's an inspiration to to us all.

And if you're if you're interested in learning more about about David's work, be
sure to check out his GitHub link, which you can find on on his resume. Oh yeah.

Until next time, keep exploring, keep learning, and keep pushing those
boundaries.

